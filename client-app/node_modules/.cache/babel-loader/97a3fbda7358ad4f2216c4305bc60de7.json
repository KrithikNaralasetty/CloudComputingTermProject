{"ast":null,"code":"import { range } from \"ramda\";\nimport dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\ndayjs.extend(dayOfYear);\nexport function getRangeOfDates(firstDate, lastDate) {\n  const start = dayjs(firstDate).dayOfYear();\n  const end = dayjs(lastDate).dayOfYear();\n  const startYear = dayjs(firstDate).year();\n  const days = range(start, end + 1); //should work between years now\n\n  const dates = days.map(day => dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day).format('YYYY-MM-DD')); //console.log(\"EventHelpers: \" + dates)\n\n  return dates;\n}","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/components/EventHelpers.js"],"names":["range","dayjs","dayOfYear","extend","getRangeOfDates","firstDate","lastDate","start","end","startYear","year","days","dates","map","day","format"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAIAD,KAAK,CAACE,MAAN,CAAaD,SAAb;AAGA,OAAO,SAASE,eAAT,CAAyBC,SAAzB,EAAoCC,QAApC,EAA8C;AACjD,QAAMC,KAAK,GAAGN,KAAK,CAACI,SAAD,CAAL,CAAiBH,SAAjB,EAAd;AACA,QAAMM,GAAG,GAAGP,KAAK,CAACK,QAAD,CAAL,CAAgBJ,SAAhB,EAAZ;AACA,QAAMO,SAAS,GAAGR,KAAK,CAACI,SAAD,CAAL,CAAiBK,IAAjB,EAAlB;AAEA,QAAMC,IAAI,GAAGX,KAAK,CAACO,KAAD,EAAQC,GAAG,GAAG,CAAd,CAAlB,CALiD,CAKd;;AACnC,QAAMI,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAUC,GAAD,IACnBb,KAAK,CAAE,GAAEM,KAAK,GAAGC,GAAR,GAAcC,SAAS,GAAG,CAA1B,GAA8BA,SAAU,QAA5C,CAAL,CAA0DP,SAA1D,CAAoEY,GAApE,EAAyEC,MAAzE,CAAgF,YAAhF,CADU,CAAd,CANiD,CASjD;;AACA,SAAOH,KAAP;AACH","sourcesContent":["import { range } from \"ramda\";\nimport dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\n\n\n\ndayjs.extend(dayOfYear)\n\n\nexport function getRangeOfDates(firstDate, lastDate) {\n    const start = dayjs(firstDate).dayOfYear()\n    const end = dayjs(lastDate).dayOfYear()\n    const startYear = dayjs(firstDate).year()\n    \n    const days = range(start, end + 1) //should work between years now\n    const dates = days.map((day) => (\n        dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day).format('YYYY-MM-DD')\n    ))\n    //console.log(\"EventHelpers: \" + dates)\n    return dates\n}\n"]},"metadata":{},"sourceType":"module"}