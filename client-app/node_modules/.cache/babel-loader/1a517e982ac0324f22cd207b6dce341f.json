{"ast":null,"code":"import { range } from \"ramda\";\nimport dayjs from \"dayjs\"; //import dayOfYear from \"dayjs/plugin/dayOfYear\";\n//dayjs.extend(dayOfYear)\n\nexport function getRangeOfDates(firstDate, lastDate) {\n  const start = dayjs(firstDate).dayOfYear();\n  const end = dayjs(lastDate).dayOfYear();\n  const startYear = dayjs(firstDate).year();\n  console.log(String(start));\n  let a = 0;\n  a += Number(start);\n  const days = range(a, 5); //should work between years now\n\n  console.log(\"EventHelpers: days=\" + days);\n  const dates = days.map(day => dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day).format('YYYY/MM/DD'));\n  console.log(\"EventHelpers: \" + dates);\n  return dates;\n}","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/components/EventHelpers.js"],"names":["range","dayjs","getRangeOfDates","firstDate","lastDate","start","dayOfYear","end","startYear","year","console","log","String","a","Number","days","dates","map","day","format"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AAIA;;AAGA,OAAO,SAASC,eAAT,CAAyBC,SAAzB,EAAoCC,QAApC,EAA8C;AAEjD,QAAMC,KAAK,GAAGJ,KAAK,CAACE,SAAD,CAAL,CAAiBG,SAAjB,EAAd;AACA,QAAMC,GAAG,GAAGN,KAAK,CAACG,QAAD,CAAL,CAAgBE,SAAhB,EAAZ;AACA,QAAME,SAAS,GAAGP,KAAK,CAACE,SAAD,CAAL,CAAiBM,IAAjB,EAAlB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACP,KAAD,CAAlB;AACA,MAAIQ,CAAC,GAAG,CAAR;AACAA,EAAAA,CAAC,IAAIC,MAAM,CAACT,KAAD,CAAX;AACA,QAAMU,IAAI,GAAGf,KAAK,CAACa,CAAD,EAAI,CAAJ,CAAlB,CATiD,CASxB;;AACzBH,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBI,IAApC;AACA,QAAMC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAUC,GAAD,IACnBjB,KAAK,CAAE,GAAEI,KAAK,GAAGE,GAAR,GAAcC,SAAS,GAAG,CAA1B,GAA8BA,SAAU,QAA5C,CAAL,CAA0DF,SAA1D,CAAoEY,GAApE,EAAyEC,MAAzE,CAAgF,YAAhF,CADU,CAAd;AAGAT,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBK,KAA/B;AACA,SAAOA,KAAP;AACH","sourcesContent":["import { range } from \"ramda\";\nimport dayjs from \"dayjs\";\n//import dayOfYear from \"dayjs/plugin/dayOfYear\";\n\n\n\n//dayjs.extend(dayOfYear)\n\n\nexport function getRangeOfDates(firstDate, lastDate) {\n    \n    const start = dayjs(firstDate).dayOfYear()\n    const end = dayjs(lastDate).dayOfYear()\n    const startYear = dayjs(firstDate).year()\n    \n    console.log(String(start))\n    let a = 0\n    a += Number(start)\n    const days = range(a, 5) //should work between years now\n    console.log(\"EventHelpers: days=\" + days)\n    const dates = days.map((day) => (\n        dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day).format('YYYY/MM/DD')\n    ))\n    console.log(\"EventHelpers: \" + dates)\n    return dates\n}\n"]},"metadata":{},"sourceType":"module"}