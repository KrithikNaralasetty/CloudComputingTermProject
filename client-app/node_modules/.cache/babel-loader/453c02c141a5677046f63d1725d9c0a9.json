{"ast":null,"code":"import dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\nimport { range } from \"ramda\";\ndayjs.extend(dayOfYear);\nexport function getRangeOfDates(firstDate, lastDate) {\n  const start = dayjs(firstDate).dayOfYear();\n  const end = dayjs(lastDate).dayOfYear();\n  const startYear = dayjs(firstDate).year();\n  const days = range(start, end); //should work between years now\n\n  const dates = days.map(day => dayjs(\"2021-01-01\").dayOfYear(day) //${start > end ? startYear + 1 : startYear}\n  );\n  console.log(\"EventHelpers: \" + dates);\n  return dates;\n}","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/components/EventHelpers.js"],"names":["dayjs","dayOfYear","range","extend","getRangeOfDates","firstDate","lastDate","start","end","startYear","year","days","dates","map","day","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,KAAT,QAAsB,OAAtB;AAEAF,KAAK,CAACG,MAAN,CAAaF,SAAb;AAGA,OAAO,SAASG,eAAT,CAAyBC,SAAzB,EAAoCC,QAApC,EAA8C;AACjD,QAAMC,KAAK,GAAGP,KAAK,CAACK,SAAD,CAAL,CAAiBJ,SAAjB,EAAd;AACA,QAAMO,GAAG,GAAGR,KAAK,CAACM,QAAD,CAAL,CAAgBL,SAAhB,EAAZ;AACA,QAAMQ,SAAS,GAAGT,KAAK,CAACK,SAAD,CAAL,CAAiBK,IAAjB,EAAlB;AAEA,QAAMC,IAAI,GAAGT,KAAK,CAACK,KAAD,EAAQC,GAAR,CAAlB,CALiD,CAKlB;;AAC/B,QAAMI,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAUC,GAAD,IACnBd,KAAK,CAAC,YAAD,CAAL,CAAoBC,SAApB,CAA8Ba,GAA9B,CADmB,CAEnB;AAFU,GAAd;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBJ,KAA/B;AACA,SAAOA,KAAP;AACH","sourcesContent":["import dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\nimport { range } from \"ramda\";\n\ndayjs.extend(dayOfYear)\n\n\nexport function getRangeOfDates(firstDate, lastDate) {\n    const start = dayjs(firstDate).dayOfYear()\n    const end = dayjs(lastDate).dayOfYear()\n    const startYear = dayjs(firstDate).year()\n\n    const days = range(start, end) //should work between years now\n    const dates = days.map((day) => (\n        dayjs(\"2021-01-01\").dayOfYear(day)\n        //${start > end ? startYear + 1 : startYear}\n    ))\n    console.log(\"EventHelpers: \" + dates)\n    return dates\n}\n"]},"metadata":{},"sourceType":"module"}