{"ast":null,"code":"import _toConsumableArray from\"/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{range}from\"ramda\";import dayjs from\"dayjs\";import weekday from\"dayjs/plugin/weekday\";import weekOfYear from\"dayjs/plugin/weekOfYear\";dayjs.extend(weekday);dayjs.extend(weekOfYear);export var daysOfWeek=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thur\",\"Fri\",\"Sat\"];export function getYearDropdownOptions(currentYear){var minYear=currentYear-4;var maxYear=currentYear+5;return range(minYear,maxYear+1).map(function(y){return{label:\"\".concat(y),value:y};});}export function getMonthDropdownOptions(){return range(1,13).map(function(m){return{value:m,label:dayjs().month(m-1).format(\"MMMM\")//formats number to full month name | 'MMMM' = January-December | 0 = January ... 11 = December\n};});}export function getNumberOfDaysInMonth(year,month){return dayjs(\"\".concat(year,\"-\").concat(month,\"-01\")).daysInMonth();//returns either 28, 30, 31 based on date '2019-01-25' => 31\n}export function createDaysForCurrentMonth(year,month){return _toConsumableArray(Array(getNumberOfDaysInMonth(year,month))).map(function(_,index){return{dateString:dayjs(\"\".concat(year,\"-\").concat(month,\"-\").concat(index+1)).format(\"YYYY-MM-DD\"),//returns an object, this line returns date string formatted\ndayOfMonth:index+1,//day date\nisCurrentMonth:true,isSelected:false};});//all in all, it returns an array of objects each representing a day in the specified month/year\n}export function createDaysForPreviousMonth(year,month,currentMonthDays){var firstDayOfTheMonthWeekday=getWeekday(currentMonthDays[0].dateString);//figures out weekday of first day of month\nvar previousMonth=dayjs(\"\".concat(year,\"-\").concat(month,\"-01\")).subtract(1,\"month\");var visibleNumberOfDaysFromPreviousMonth=firstDayOfTheMonthWeekday;var previousMonthLastMondayDayOfMonth=dayjs(currentMonthDays[0].dateString).subtract(visibleNumberOfDaysFromPreviousMonth,\"day\").date();return _toConsumableArray(Array(visibleNumberOfDaysFromPreviousMonth)).map(function(_,index){return{dateString:dayjs(\"\".concat(previousMonth.year(),\"-\").concat(previousMonth.month()+1,\"-\").concat(previousMonthLastMondayDayOfMonth+index)).format(\"YYYY-MM-DD\"),dayOfMonth:previousMonthLastMondayDayOfMonth+index,isCurrentMonth:false,isPreviousMonth:true};});}export function createDaysForNextMonth(year,month,currentMonthDays){var lastDayOfTheMonthWeekday=getWeekday(\"\".concat(year,\"-\").concat(month,\"-\").concat(currentMonthDays.length));var nextMonth=dayjs(\"\".concat(year,\"-\").concat(month,\"-01\")).add(1,\"month\");var visibleNumberOfDaysFromNextMonth=6-lastDayOfTheMonthWeekday;return _toConsumableArray(Array(visibleNumberOfDaysFromNextMonth)).map(function(day,index){return{dateString:dayjs(\"\".concat(nextMonth.year(),\"-\").concat(nextMonth.month()+1,\"-\").concat(index+1)).format(\"YYYY-MM-DD\"),dayOfMonth:index+1,isCurrentMonth:false,isNextMonth:true};});}// sunday === 0, saturday === 6\nexport function getWeekday(dateString){//returns weekday 0-6 based on date passed in\nreturn dayjs(dateString).weekday();}export function isWeekendDay(dateString){return[6,0].includes(getWeekday(dateString));}","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/components/Helpers.js"],"names":["range","dayjs","weekday","weekOfYear","extend","daysOfWeek","getYearDropdownOptions","currentYear","minYear","maxYear","map","y","label","value","getMonthDropdownOptions","m","month","format","getNumberOfDaysInMonth","year","daysInMonth","createDaysForCurrentMonth","Array","_","index","dateString","dayOfMonth","isCurrentMonth","isSelected","createDaysForPreviousMonth","currentMonthDays","firstDayOfTheMonthWeekday","getWeekday","previousMonth","subtract","visibleNumberOfDaysFromPreviousMonth","previousMonthLastMondayDayOfMonth","date","isPreviousMonth","createDaysForNextMonth","lastDayOfTheMonthWeekday","length","nextMonth","add","visibleNumberOfDaysFromNextMonth","day","isNextMonth","isWeekendDay","includes"],"mappings":"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","sourcesContent":["import { range } from \"ramda\";\nimport dayjs from \"dayjs\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\n\ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\n\nexport const daysOfWeek = [\n  \"Sun\",\n  \"Mon\",\n  \"Tue\",\n  \"Wed\",\n  \"Thur\",\n  \"Fri\",\n  \"Sat\"\n];\n\n\n\nexport function getYearDropdownOptions(currentYear) {\n  let minYear = currentYear - 4;\n  let maxYear = currentYear + 5;\n  return range(minYear, maxYear + 1).map((y) => ({ label: `${y}`, value: y }));\n}\n\nexport function getMonthDropdownOptions() {\n  return range(1, 13).map((m) => ({\n    value: m,\n    label: dayjs()\n      .month(m - 1)\n      .format(\"MMMM\") //formats number to full month name | 'MMMM' = January-December | 0 = January ... 11 = December\n  }));\n}\n\nexport function getNumberOfDaysInMonth(year, month) {\n  return dayjs(`${year}-${month}-01`).daysInMonth(); //returns either 28, 30, 31 based on date '2019-01-25' => 31\n}\n\nexport function createDaysForCurrentMonth(year, month) {\n  return [...Array(getNumberOfDaysInMonth(year, month))].map((_, index) => {\n    return {\n      dateString: dayjs(`${year}-${month}-${index + 1}`).format(\"YYYY-MM-DD\"), //returns an object, this line returns date string formatted\n      dayOfMonth: index + 1, //day date\n      isCurrentMonth: true,\n      isSelected: false\n    };\n  }); //all in all, it returns an array of objects each representing a day in the specified month/year\n}\n\nexport function createDaysForPreviousMonth(year, month, currentMonthDays) {\n  const firstDayOfTheMonthWeekday = getWeekday(currentMonthDays[0].dateString); //figures out weekday of first day of month\n  const previousMonth = dayjs(`${year}-${month}-01`).subtract(1, \"month\");\n\n  const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday;\n\n  const previousMonthLastMondayDayOfMonth = dayjs(\n    currentMonthDays[0].dateString\n  )\n    .subtract(visibleNumberOfDaysFromPreviousMonth, \"day\")\n    .date();\n\n  return [...Array(visibleNumberOfDaysFromPreviousMonth)].map((_, index) => {\n    return {\n      dateString: dayjs(\n        `${previousMonth.year()}-${previousMonth.month() + 1}-${\n          previousMonthLastMondayDayOfMonth + index\n        }`\n      ).format(\"YYYY-MM-DD\"),\n      dayOfMonth: previousMonthLastMondayDayOfMonth + index,\n      isCurrentMonth: false,\n      isPreviousMonth: true\n    };\n  });\n}\n\nexport function createDaysForNextMonth(year, month, currentMonthDays) {\n  const lastDayOfTheMonthWeekday = getWeekday(\n    `${year}-${month}-${currentMonthDays.length}`\n  );\n  const nextMonth = dayjs(`${year}-${month}-01`).add(1, \"month\");\n  const visibleNumberOfDaysFromNextMonth = 6 - lastDayOfTheMonthWeekday;\n\n  return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\n    return {\n      dateString: dayjs(\n        `${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`\n      ).format(\"YYYY-MM-DD\"),\n      dayOfMonth: index + 1,\n      isCurrentMonth: false,\n      isNextMonth: true\n    };\n  });\n}\n\n// sunday === 0, saturday === 6\nexport function getWeekday(dateString) { //returns weekday 0-6 based on date passed in\n  return dayjs(dateString).weekday();\n}\n\nexport function isWeekendDay(dateString) {\n  return [6, 0].includes(getWeekday(dateString));\n}"]},"metadata":{},"sourceType":"module"}