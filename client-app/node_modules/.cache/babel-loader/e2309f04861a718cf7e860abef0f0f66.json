{"ast":null,"code":"import dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\nimport { range } from \"ramda\"; // const range = (start, end, step = 1) => {\n//     let output = [];\n//     if (typeof end === 'undefined') {\n//       end = start;\n//       start = 0;\n//     }\n//     for (let i = start; i < end; i += step) {\n//       output.push(i);\n//     }\n//     return output;\n//   };\n\ndayjs.extend(dayOfYear);\nexport function getRangeOfDates(firstDate, lastDate) {\n  let start = dayjs(firstDate).dayOfYear();\n  let end = dayjs(lastDate).dayOfYear();\n  let startYear = dayjs(firstDate).year();\n  let days = range(start, end); //should work between years now\n\n  console.log(\"EventHelpers: days=\" + days);\n  const dates = days.map(day => dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day));\n  console.log(\"EventHelpers: \" + dates);\n  return dates;\n}","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/components/EventHelpers.js"],"names":["dayjs","dayOfYear","range","extend","getRangeOfDates","firstDate","lastDate","start","end","startYear","year","days","console","log","dates","map","day"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,KAAT,QAAsB,OAAtB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEAF,KAAK,CAACG,MAAN,CAAaF,SAAb;AAGA,OAAO,SAASG,eAAT,CAAyBC,SAAzB,EAAoCC,QAApC,EAA8C;AACjD,MAAIC,KAAK,GAAGP,KAAK,CAACK,SAAD,CAAL,CAAiBJ,SAAjB,EAAZ;AACA,MAAIO,GAAG,GAAGR,KAAK,CAACM,QAAD,CAAL,CAAgBL,SAAhB,EAAV;AACA,MAAIQ,SAAS,GAAGT,KAAK,CAACK,SAAD,CAAL,CAAiBK,IAAjB,EAAhB;AAEA,MAAIC,IAAI,GAAGT,KAAK,CAACK,KAAD,EAAQC,GAAR,CAAhB,CALiD,CAKpB;;AAC7BI,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,IAApC;AACA,QAAMG,KAAK,GAAGH,IAAI,CAACI,GAAL,CAAUC,GAAD,IACnBhB,KAAK,CAAE,GAAEO,KAAK,GAAGC,GAAR,GAAcC,SAAS,GAAG,CAA1B,GAA8BA,SAAU,QAA5C,CAAL,CAA0DR,SAA1D,CAAoEe,GAApE,CADU,CAAd;AAGAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,KAA/B;AACA,SAAOA,KAAP;AACH","sourcesContent":["import dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\nimport { range } from \"ramda\";\n// const range = (start, end, step = 1) => {\n//     let output = [];\n  \n//     if (typeof end === 'undefined') {\n//       end = start;\n//       start = 0;\n//     }\n  \n//     for (let i = start; i < end; i += step) {\n//       output.push(i);\n//     }\n  \n//     return output;\n//   };\n\ndayjs.extend(dayOfYear)\n\n\nexport function getRangeOfDates(firstDate, lastDate) {\n    let start = dayjs(firstDate).dayOfYear()\n    let end = dayjs(lastDate).dayOfYear()\n    let startYear = dayjs(firstDate).year()\n\n    let days = range(start, end) //should work between years now\n    console.log(\"EventHelpers: days=\" + days)\n    const dates = days.map((day) => (\n        dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day)\n    ))\n    console.log(\"EventHelpers: \" + dates)\n    return dates\n}\n"]},"metadata":{},"sourceType":"module"}