{"ast":null,"code":"import { range } from \"ramda\";\nimport dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\ndayjs.extend(dayOfYear);\nexport function getRangeOfDates(firstDate, lastDate) {\n  const start = dayjs(firstDate).dayOfYear();\n  const end = dayjs(lastDate).dayOfYear();\n  const startYear = dayjs(firstDate).year();\n  let s = 0;\n\n  for (let i = 0; i < start - 300; i++) {\n    s++;\n  }\n\n  let e = 0;\n\n  for (let j = 0; j < end - 300; j++) {\n    e++;\n  }\n\n  let b = 24;\n  console.log(range(b, 50));\n  const days = range(s, e); //should work between years now\n\n  console.log(\"EventHelpers: days=\" + days);\n  const dates = days.map(day => dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day).format('YYYY/MM/DD'));\n  console.log(\"EventHelpers: \" + dates);\n  return dates;\n}","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/components/EventHelpers.js"],"names":["range","dayjs","dayOfYear","extend","getRangeOfDates","firstDate","lastDate","start","end","startYear","year","s","i","e","j","b","console","log","days","dates","map","day","format"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAIAD,KAAK,CAACE,MAAN,CAAaD,SAAb;AAGA,OAAO,SAASE,eAAT,CAAyBC,SAAzB,EAAoCC,QAApC,EAA8C;AAEjD,QAAMC,KAAK,GAAGN,KAAK,CAACI,SAAD,CAAL,CAAiBH,SAAjB,EAAd;AACA,QAAMM,GAAG,GAAGP,KAAK,CAACK,QAAD,CAAL,CAAgBJ,SAAhB,EAAZ;AACA,QAAMO,SAAS,GAAGR,KAAK,CAACI,SAAD,CAAL,CAAiBK,IAAjB,EAAlB;AAEA,MAAIC,CAAC,GAAG,CAAR;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,GAAC,GAA1B,EAA+BK,CAAC,EAAhC,EAAoC;AAChCD,IAAAA,CAAC;AACJ;;AACD,MAAIE,CAAC,GAAE,CAAP;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,GAAC,GAAxB,EAA6BM,CAAC,EAA9B,EAAkC;AAC9BD,IAAAA,CAAC;AACJ;;AACD,MAAIE,CAAC,GAAG,EAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACe,CAAD,EAAI,EAAJ,CAAjB;AAGA,QAAMG,IAAI,GAAGlB,KAAK,CAACW,CAAD,EAAIE,CAAJ,CAAlB,CAlBiD,CAkBxB;;AACzBG,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBC,IAApC;AACA,QAAMC,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAUC,GAAD,IACnBpB,KAAK,CAAE,GAAEM,KAAK,GAAGC,GAAR,GAAcC,SAAS,GAAG,CAA1B,GAA8BA,SAAU,QAA5C,CAAL,CAA0DP,SAA1D,CAAoEmB,GAApE,EAAyEC,MAAzE,CAAgF,YAAhF,CADU,CAAd;AAGAN,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBE,KAA/B;AACA,SAAOA,KAAP;AACH","sourcesContent":["import { range } from \"ramda\";\nimport dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\n\n\n\ndayjs.extend(dayOfYear)\n\n\nexport function getRangeOfDates(firstDate, lastDate) {\n    \n    const start = dayjs(firstDate).dayOfYear()\n    const end = dayjs(lastDate).dayOfYear()\n    const startYear = dayjs(firstDate).year()\n    \n    let s = 0;\n    for (let i = 0; i < start-300; i++) {\n        s++;\n    }\n    let e= 0\n    for (let j = 0; j < end-300; j++) {\n        e++;\n    }\n    let b = 24\n    console.log(range(b, 50))\n    \n \n    const days = range(s, e) //should work between years now\n    console.log(\"EventHelpers: days=\" + days)\n    const dates = days.map((day) => (\n        dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day).format('YYYY/MM/DD')\n    ))\n    console.log(\"EventHelpers: \" + dates)\n    return dates\n}\n"]},"metadata":{},"sourceType":"module"}