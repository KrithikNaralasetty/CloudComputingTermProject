{"ast":null,"code":"var _jsxFileName = \"/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    Logout,\n    navigate,\n    error,\n    setError,\n    user\n  } = _ref;\n  const [events, setEvents] = useState(null);\n  const data = {\n    userid: user.id\n  };\n  console.log(data.userid);\n  useEffect(() => {\n    axios.post(\"http://localhost:4000/api/retrieve-events\", data) //always post when sending data\n    .then(response => {\n      if (response.data) {\n        console.log(\"Events retrieved!\");\n        setError(\"\"); //console.log(response.data)\n\n        let ez = [];\n\n        for (const event of response.data) {\n          console.log(\"collabs: \" + event.collaborators);\n          if (event.userid === user.id) ez.push(event);\n        }\n\n        setEvents(ez);\n        console.log(events);\n      } else {\n        console.log(\"Events could not be retrieved\");\n        setError(\"Events could not be retrieved\");\n      }\n    });\n  }, []); //don't know how to only run this once asnychrnously\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-purple-400 w-full h-screen text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white text-7xl font-bold tracking-tight pt-52\",\n      children: \"MeetUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-yellow-300 text-4xl font-medium tracking-wide py-10\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-center space-x-32 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            navigate(\"/create-event-1\");\n          },\n          className: \"block rounded-lg p-10 bg-yellow-300  text-white text-4xl shadow-md\",\n          children: \"Set Up Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Logout,\n          className: \" my-10 block mr-20 text-3xl border-b-2 border-yellow-300 text-yellow-300 hover:border-yellow-400 hover:text-yellow-400 cursor-pointer\",\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-white text-3xl font-semibold text-left mb-4\",\n          children: \"Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-full rounded-md shadow-md bg-blue-900\",\n          children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-left \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-2xl underline\",\n                children: event.eventname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xl\",\n                children: [\"By \", event.owner]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"xl92kQS5BieEcVRXPNFPepqRmHw=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/Dashboard.js"],"names":["React","useState","useEffect","axios","Dashboard","Logout","navigate","error","setError","user","events","setEvents","data","userid","id","console","log","post","then","response","ez","event","collaborators","push","map","eventname","owner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"\n\nconst Dashboard = ({Logout, navigate, error, setError, user, }) => {\n    \n    const [events, setEvents] = useState(null)\n\n    const data = { userid: user.id}\n    console.log(data.userid)\n\n    useEffect(() => {\n        axios.post(\"http://localhost:4000/api/retrieve-events\", data) //always post when sending data\n        .then(response => {\n            if (response.data) {\n                console.log(\"Events retrieved!\");\n                setError(\"\")\n                //console.log(response.data)\n                let ez = []\n                for (const event of response.data) {\n                    console.log(\"collabs: \" + event.collaborators)\n                    if (event.userid === user.id)\n                        ez.push(event)\n                }\n\n                setEvents(ez)\n                console.log(events)\n            } else {\n                console.log(\"Events could not be retrieved\")\n                setError(\"Events could not be retrieved\")\n            }\n        })\n    }, []) //don't know how to only run this once asnychrnously\n    \n\n\n    return (\n        <div className=\"bg-purple-400 w-full h-screen text-center\">\n            <h1 className=\"text-white text-7xl font-bold tracking-tight pt-52\">MeetUp</h1>\n            <h2 className=\"text-yellow-300 text-4xl font-medium tracking-wide py-10\">Dashboard</h2>\n            <div className=\"flex flex-row justify-center space-x-32 mx-auto\">\n                <div>\n                    <button onClick={() => {navigate(\"/create-event-1\")}}className=\"block rounded-lg p-10 bg-yellow-300 \n                    text-white text-4xl shadow-md\">Set Up Event</button>\n                    <button onClick={Logout} className=\" my-10 block mr-20 text-3xl border-b-2 border-yellow-300 text-yellow-300 hover:border-yellow-400\n                    hover:text-yellow-400 cursor-pointer\">Log out\n                    </button>\n                </div>\n                <div className=\" w-96\">\n                    <h3 className=\"text-white text-3xl font-semibold text-left mb-4\">Events</h3>\n                    <div className=\"w-full h-full rounded-md shadow-md bg-blue-900\">\n                        {events.map((event) => (\n                            <div key={event.id} className=\"text-white text-left \">\n                                <div className=\"p-4\">\n                                    <h4 className=\"text-2xl underline\">{event.eventname}</h4>\n                                    <p className=\"text-xl\">By {event.owner}</p>\n                                </div>\n                                \n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}