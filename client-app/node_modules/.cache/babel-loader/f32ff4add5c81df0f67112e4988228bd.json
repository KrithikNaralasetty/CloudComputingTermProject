{"ast":null,"code":"import dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\"; //import { range } from \"ramda\";\n\nconst range = (min, max) => Array.from({\n  length: max - min + 1\n}, (_, i) => min + i);\n\ndayjs.extend(dayOfYear);\nexport function getRangeOfDates(firstDate, lastDate) {\n  const start = dayjs(firstDate).dayOfYear();\n  const end = dayjs(lastDate).dayOfYear();\n  const startYear = dayjs(firstDate).year();\n  const days = range(start, end); //should work between years now\n\n  console.log(\"EventHelpers: days=\" + days);\n  const dates = days.map(day => dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day));\n  console.log(\"EventHelpers: \" + dates);\n  return dates;\n}","map":{"version":3,"sources":["/Users/aristos/Documents/Fall_2021/COEN_241/CloudComputingTermProject/client-app/src/pages/components/EventHelpers.js"],"names":["dayjs","dayOfYear","range","min","max","Array","from","length","_","i","extend","getRangeOfDates","firstDate","lastDate","start","end","startYear","year","days","console","log","dates","map","day"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,MAAMC,KAAK,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAEH,GAAG,GAAGD,GAAN,GAAY;AAAtB,CAAX,EAAsC,CAACK,CAAD,EAAIC,CAAJ,KAAUN,GAAG,GAAGM,CAAtD,CAA5B;;AAEAT,KAAK,CAACU,MAAN,CAAaT,SAAb;AAGA,OAAO,SAASU,eAAT,CAAyBC,SAAzB,EAAoCC,QAApC,EAA8C;AACjD,QAAMC,KAAK,GAAGd,KAAK,CAACY,SAAD,CAAL,CAAiBX,SAAjB,EAAd;AACA,QAAMc,GAAG,GAAGf,KAAK,CAACa,QAAD,CAAL,CAAgBZ,SAAhB,EAAZ;AACA,QAAMe,SAAS,GAAGhB,KAAK,CAACY,SAAD,CAAL,CAAiBK,IAAjB,EAAlB;AAIA,QAAMC,IAAI,GAAGhB,KAAK,CAACY,KAAD,EAAQC,GAAR,CAAlB,CAPiD,CAOlB;;AAC/BI,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,IAApC;AACA,QAAMG,KAAK,GAAGH,IAAI,CAACI,GAAL,CAAUC,GAAD,IACnBvB,KAAK,CAAE,GAAEc,KAAK,GAAGC,GAAR,GAAcC,SAAS,GAAG,CAA1B,GAA8BA,SAAU,QAA5C,CAAL,CAA0Df,SAA1D,CAAoEsB,GAApE,CADU,CAAd;AAGAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBC,KAA/B;AACA,SAAOA,KAAP;AACH","sourcesContent":["import dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\n//import { range } from \"ramda\";\nconst range = (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i);\n\ndayjs.extend(dayOfYear)\n\n\nexport function getRangeOfDates(firstDate, lastDate) {\n    const start = dayjs(firstDate).dayOfYear()\n    const end = dayjs(lastDate).dayOfYear()\n    const startYear = dayjs(firstDate).year()\n\n\n\n    const days = range(start, end) //should work between years now\n    console.log(\"EventHelpers: days=\" + days)\n    const dates = days.map((day) => (\n        dayjs(`${start > end ? startYear + 1 : startYear}-01-01`).dayOfYear(day)\n    ))\n    console.log(\"EventHelpers: \" + dates)\n    return dates\n}\n"]},"metadata":{},"sourceType":"module"}